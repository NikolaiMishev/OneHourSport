@model OneHourSport.Web.Models.Account.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    <div class="form-group">
        <div class="col-md-7 text-center text-danger">
            @Html.ValidationSummary(true, "", new { @class = "coolLi alert alert-dismissible alert-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ProfilePicture, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.ValidationMessageFor(m => m.ProfilePicture, null, new { @class = "text-danger text-center help-inline" })
            <span class="btn btn-warning btn-file">
                Browse... @Html.TextBoxFor(m => m.ProfilePicture, new { @class = "form-control", type = "file" })
            </span>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.ValidationMessageFor(m => m.UserName, null, new { @class = "text-danger text-center help-inline" })
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.ValidationMessageFor(m => m.FirstName, null, new { @class = "text-danger text-center help-inline" })
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.ValidationMessageFor(m => m.LastName, null, new { @class = "text-danger text-center help-inline" })
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.ValidationMessageFor(m => m.Email, null, new { @class = "text-danger text-center help-inline" })
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.ValidationMessageFor(m => m.PhoneNumber, null, new { @class = "text-danger text-center help-inline" })
            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.IsComplex, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.CheckBoxFor(m => m.IsComplex)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.ValidationMessageFor(m => m.Password, null, new { @class = "text-danger text-center help-inline" })
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new { @class = "text-danger text-center help-inline" })
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default btn-lg" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
