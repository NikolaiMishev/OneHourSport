@model OneHourSport.Web.Models.Field.FieldRequestViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Create", "Field", new { complexId = this.ViewBag.ComplexId }, FormMethod.Post,new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <h4>Add a Field here!</h4>
    <hr />
    <div class="form-group">
        <div class="col-md-7 text-center text-danger">
            @Html.ValidationSummary(true, "", new { @class = "coolLi alert alert-dismissible alert-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Field Pictures:", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.ValidationMessageFor(m => m.ProfilePictures, null, new { @class = "text-danger text-center help-inline" })
            <span class="btn btn-warning btn-file">
                Browse Multiple... @Html.TextBoxFor(m => m.ProfilePictures, new { @class = "form-control", type = "file", multiple="multiple"})
            </span>
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Field name:", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.ValidationMessageFor(m => m.Name, null, new { @class = "text-danger text-center help-inline" })
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Field name" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.ValidationMessageFor(m => m.Description, null, new { @class = "text-danger text-center help-inline" })
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control" , placeholder = "Description" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Price per hour (lv):", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.ValidationMessageFor(m => m.PricePerHour, null, new { @class = "text-danger text-center help-inline" })
            @Html.TextBoxFor(m => m.PricePerHour, new { @class = "form-control", type = "number", placeholder = "Price" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Is Covered", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.ValidationMessageFor(m => m.isCovered, null, new { @class = "text-danger text-center help-inline" })
            @Html.CheckBoxFor(m => m.isCovered)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Category, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.ValidationMessageFor(m => m.Category, null, new { @class = "text-danger text-center help-inline" })
            @Html.EnumDropDownListFor(m => m.Category, "Select category", new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default btn-lg" value="Create" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}