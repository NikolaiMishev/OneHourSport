@model OneHourSport.Web.Models.Field.FieldDisplayViewModel
@{
    Layout = null;
}

<div>
    <div class="row">
        <br />
        <div class="container">
            <div class="row col-lg-offset-1">
                <h3><span style="background-color: #80A4A5; margin-right:10px;">@Model.Index</span><a href="@Url.Action("FieldDetails", "Field",new { id = Model.Id })">@Model.Name</a></h3>

            </div>
            <br />
            <div class="col-md-3 col-md-offset-1">
                <div class="">
                    <img src="@Url.Action("GetImage", "Picture", new { area = string.Empty, id = Model.PictureId })" alt="@Model.Name" class="displayImage myBox img-responsive" />
                </div>
            </div>

            <div class="col-md-6 text-left">
                <div class="row">
                    @Html.Label("A part of ")
                    @Html.ActionLink(Model.SportComplexName, "ComplexDetails", "Complex", new { area = string.Empty, id = Model.SportComplexId }, null)
                </div>
                <div class="row">
                    @Html.Label("Comments: ")
                    @Html.DisplayTextFor(m => Model.CommentsCount)
                </div>
                <div class="row">
                    @Html.Label("Category: ")
                    @Html.ActionLink(Model.Category.ToString(), "ListFieldsByCategory", "Field", new { area = string.Empty, category = Model.Category }, null)
                </div>
                <div class="row">
                    @Html.Label("Location: ")
                    @Html.DisplayTextFor(m => Model.Location)
                </div>
                <div class="row">
                    <input id="@Model.Id-xs" value="@Model.Rating" class="rating-loading rateClass" data-max="5" data-step="1" data-size="xs">
                </div>
            </div>
            <div class="col-md-2">
                @if (Model.IsMine)
                {
                    <div class="detailsBtn">
                        @Html.ActionLink("Delete", "Delete", "Field", new { area = string.Empty, complexId = Model.Id }, new { @class = "btn btn-danger pull-right" })
                    </div>

                    <div class="detailsBtn">
                        @Html.ActionLink("Edit", "EditField", "Field", new { area = string.Empty, fieldId = Model.Id }, new { @class = "btn btn-warning pull-right" })
                    </div>
                }
            </div>
        </div>
    </div>
</div>